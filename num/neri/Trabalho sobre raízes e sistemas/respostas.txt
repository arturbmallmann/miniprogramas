Artur Bernardo Mallmann
Mat: 1511100032
para compilar todos os programas:
make
caso deseje compilar manualmente:
gcc nome.c -lm -o nome

1) r=9 

2) encontrei duas raizes usando o método da bissecao:
	com um intervalo de 0 à 0.4 encontrei:
	 raiz da equacao é: 0.00718826362863
	 iterações: 32

	com um intervalo de .4 à 1 encontrei:
	 raiz da equacao é: 0.47217781893
	 iterações: 33

3) primeiramente eu rearrangei a expressão conforme a imagem ex3.jpg
	depois apliquei o método da bisseção em um intervalo de 0 à 10:
		aproximação: 1.13143562441
		iterações: 37

4)
Usei neste o método de newton: a derivada da funcao ficou:
 -50 * (sin(50*x + R) + cos(50*x - R) )
Devido aos ciclos serem bastante "rápidos" podemos encontrar diversas
raízes próximas umas das outras, com ciclos em intervalos pi/50.
Usando o método de newton usei chutes com intervalos próximos destes
0.06283185307179587, mais precisamente:
chute 0:
	raiz da equacao é: 0.015708
	iterações: 5

chute 0.06:
	raiz da equacao é: 0.0785398
	iterações: 5

chute 0.12:
	raiz da equacao é: 0.141372
	iterações: 5

5)
a) A é convergente
b) M é convergente
c) D é convergente

6)
TODO OS CHUTES FORAM ZERO!!!

A usando gauss-seidel:
x |0.1739132932|
y |-1.8260867068|
z |0.4782607586|
iteracoes: 8

A usando jacobi:
x |0.1739130435|
y |-1.8260869565|
z |0.4782608695|
iteracoes: 28

D usando gauss-seidel:
i: |-1.9343637870|
i: |0.3351211492|
i: |-1.4023346964|
i: |-14.5575864838|
i: |-6.6765531839|
i: |26.0788878802|
i: |-39.2628559520|
i: |-12.0993991239|
iteracoes: 25

D usando jacobi:
i: |-1.9343641527|
i: |0.3351214894|
i: |-1.4023351215|
i: |-14.5575891447|
i: |-6.6765541180|
i: |26.0788892394|
i: |-39.2628589459|
i: |-12.0994004417|
iteracoes: 101
7)
